<launch>
    
    
    
    <!-- Define arguments and defaults  -->
    <arg name="usb" default="0" />
    <arg name="robot" default="1" />
    <arg name="kinect" default="1" />
    <arg name="joint_gui" default="0" />
    <arg name="rviz" default="1" />
    <arg name="config" default="1" />
    <arg name="machine" default="remote"/>
    <arg name="local_addr" default="james-laptop" />
    <arg name="local_user" default="james" />
    <arg name="remote_user" default="james" />
    <arg name="remote_addr" default="mr-anderson" />
    
    <env name="ROS_MASTER_URI" value="http://$(arg remote_addr):11311" />
    
    <!-- Define machines-->
    <machine name="remote" address="$(arg remote_addr)" user="$(arg remote_user)" />
    
    <!-- Define machines-->
    <machine name="local" address="$(arg local_addr)" user="$(arg local_user)" />
        
    
    <!-- launch on local -->
    <group>
    
        <!--rviz-->
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_360_control)/vcg/turtlebot_360.vcg" if="$(arg rviz)"/>
        
        <!-- launch soud play for speach syth -->
        <node pkg="sound_play" type="soundplay_node.py" name="sound_play_local" />
        
        <!-- launch wiimote node -->
        <node pkg="wiimote" type="wiimote_node.py" name="wiimote" respawn="true" />
        
        
    </group>
    
    <!-- launch on robot -->
    <group >
    
    
        <!-- launch kinect drivers    -->
        <group if="$(arg kinect)">
        
            <include file="$(find turtlebot_360_control)/launch/kinect.launch" >
                <arg name="machine" value="$(arg machine)" />
            </include>
            
            <node pkg="kinect_aux" type="kinect_aux_node" name="kinect_aux_node" machine="$(arg machine)"/>
            
        </group>
        
        
        <!-- launch control node    -->
        <node pkg="turtlebot_360_control" type="control" name="control"  required="true" args="nav_twist:=cmd_vel" machine="$(arg machine)">
            
            <!-- rosparam file="$(find turtlebot_360_control)/yaml/Control.yaml" command="load" / -->
            
            <!-- param name = "minus_sound" value = "$(find turtlebot_360_control)/sounds/Ahooga_Car_Horn.wav" / -->
            
        </node>
        
        <!-- creat robot descrition and decide if gui wil launch -->
        <param name="robot_description" command="$(find xacro)/xacro.py '$(find turtlebot_360_description)/urdf/turtlebot_360.urdf.xacro'" />
        <param name="use_gui" value="$(arg joint_gui)"/>
        
        
        <!-- lauch the joint state publisher and robot state publisher -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" machine="$(arg machine)">
        
            <rosparam param="source_list">['kinect_state']</rosparam>
        
        </node>
        
        <!--robot state publisher-->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" machine="$(arg machine)"/>
        
        <!-- launch soud play for speach syth -->
        <node pkg="sound_play" type="soundplay_node.py" name="sound_play_robot" machine="$(arg machine)"/>
        
        <!-- run motor drivers    -->
        <node pkg="turtlebot_360_hardware_interface" type="turtlebot_360_hardware_interface" name="turtlebot_360_hardware_interface" args="twist:=con_vel" machine="$(arg machine)"/>
        
        <!-- launch the dynamic reconfigure gui  -->
        <node pkg="dynamic_reconfigure" type="reconfigure_gui" name="reconfigure_gui" if="$(arg config)" machine="$(arg machine)"/>
        
    </group>
    
</launch>
